// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KısaAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UzunAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Birimler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 670, DateTimeKind.Local).AddTicks(8415),
                            IsDeleted = false,
                            KısaAdı = "Ad",
                            UzunAdı = "Adet"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 670, DateTimeKind.Local).AddTicks(8422),
                            IsDeleted = false,
                            KısaAdı = "Lt",
                            UzunAdı = "Litre"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 670, DateTimeKind.Local).AddTicks(8424),
                            IsDeleted = false,
                            KısaAdı = "Gr",
                            UzunAdı = "Gram"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 670, DateTimeKind.Local).AddTicks(8425),
                            IsDeleted = false,
                            KısaAdı = "Kg",
                            UzunAdı = "Kilogram"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 670, DateTimeKind.Local).AddTicks(8427),
                            IsDeleted = false,
                            KısaAdı = "M",
                            UzunAdı = "Metre"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Tür")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cariler");
                });

            modelBuilder.Entity("Domain.Entities.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Depolar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Ana Depo",
                            Adres = "Merkez",
                            CreatedDate = new DateTime(2024, 9, 4, 17, 0, 2, 671, DateTimeKind.Local).AddTicks(286),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.Hareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CariId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("HareketTipi")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CariId");

                    b.HasIndex("DepoId");

                    b.HasIndex("StokId");

                    b.ToTable("Hareketler");
                });

            modelBuilder.Entity("Domain.Entities.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("DepoId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("Domain.Entities.Hareket", b =>
                {
                    b.HasOne("Domain.Entities.Cari", "Cari")
                        .WithMany("Hareketler")
                        .HasForeignKey("CariId");

                    b.HasOne("Domain.Entities.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId");

                    b.HasOne("Domain.Entities.Stok", "Stok")
                        .WithMany()
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cari");

                    b.Navigation("Depo");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Domain.Entities.Stok", b =>
                {
                    b.HasOne("Domain.Entities.Birim", "Birim")
                        .WithMany("Stoklar")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Depo", "Depo")
                        .WithMany("Stoklar")
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Depo");
                });

            modelBuilder.Entity("Domain.Entities.Birim", b =>
                {
                    b.Navigation("Stoklar");
                });

            modelBuilder.Entity("Domain.Entities.Cari", b =>
                {
                    b.Navigation("Hareketler");
                });

            modelBuilder.Entity("Domain.Entities.Depo", b =>
                {
                    b.Navigation("Stoklar");
                });
#pragma warning restore 612, 618
        }
    }
}
